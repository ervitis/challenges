"""
Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.
"""


def remove_palindrome_sub(s: str) -> int:
    if len(s) == 0:
        return 0

    if s == s[::-1]:
        return 1
    else:
        return 2


if __name__ == '__main__':
    print(remove_palindrome_sub(''))
    print(remove_palindrome_sub('bb'))
    print(remove_palindrome_sub('baabb'))
    print(remove_palindrome_sub('abb'))
    print(remove_palindrome_sub('ababa'))
    print(remove_palindrome_sub('aaaabbbababababbbbaa'))
